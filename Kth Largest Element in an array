class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        
        // 1. Sorting an array in descending order
        sort(nums.begin(), nums.end(), greater<int>());

        return nums[k-1];


        //min heap :
        priority_queue<int, vector<int>, greater<int>> pq;
        int n = nums.size();

        for(int i=0; i<k; i++){
            pq.push(nums[i]);
        }

        for(int i=k; i<n; i++){

            if(nums[i] >pq.top()){
                pq.pop();
                pq.push(nums[i]);
            }
        }

        return pq.top();

        //max Heap:
        priority_queue<int> pq;
        int n = nums.size();

        for(int i=0; i<n; i++){
            pq.push(nums[i]);
        }

        int count = 1;

        while(count != k){
            pq.pop();
            count++;
        }

        return pq.top();

    }
};
